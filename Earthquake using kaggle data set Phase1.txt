import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

# Load earthquake data into a DataFrame
# Preprocess and feature engineering steps here...

# Select relevant features and target variable
features = ['feature1', 'feature2', ...]
target = 'magnitude'

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(data[features], data[target], test_size=0.2, random_state=42)

# Train the model
model = RandomForestRegressor()
model.fit(X_train, y_train)

# Make predictions
predictions = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, predictions)
print('Mean Squared Error:', mse)



Create a Kaggle Account:

  Go to the Kaggle website (https://www.kaggle.com/) and create an account if you don't have one.
Explore Kaggle Datasets:

Use the Kaggle Datasets page to search for earthquake-related datasets. You can find datasets related to seismic activity, earthquake magnitudes, locations, and more.
Select a Dataset:

Choose a dataset that suits your interests and the specific analysis you want to perform. Ensure that the dataset is well-documented, and you understand the structure of the data.
Download the Dataset:

Download the dataset from Kaggle. Some datasets may require you to accept terms and conditions before downloading.
Set Up Your Environment:

Set up your programming environment. Popular choices include Jupyter Notebooks, Google Colab, or any other Python environment.
Load and Explore the Data:

Use pandas or other data manipulation libraries to load the dataset into your environment. Explore the data to understand its structure, the types of variables, and any missing values